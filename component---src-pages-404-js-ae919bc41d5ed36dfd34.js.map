{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/404.js"],"names":["Seo","title","description","article","pathname","useLocation","useStaticQuery","defaultTitle","titleTemplate","defaultDescription","siteUrl","twitterUsername","seo","url","name","content","property","query"],"mappings":"iLAYMA,EAAM,SAAC,GAAoC,IAAlCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACzBC,GAAaC,mBAArB,SAEA,GADiBC,oBAAjB,QACA,aACEC,EADF,eAEEC,EAFF,gBAGEC,EAHF,qBAIEC,EAJF,UAKEC,EALF,kBAOMC,EAAM,CACVX,MAAOA,GADG,EAEVC,YAAaA,GAFH,EAGVW,IAAK,GAAF,EAAeT,GAEpB,OACE,qBAAQH,MAAOW,EAAf,MAA0BJ,cAAeA,GACvC,wBAAMM,KAAN,cAAyBC,QAASH,EAAIV,cACrCU,OAAW,wBAAMI,SAAN,SAAwBD,QAASH,EAAIC,OAC/CV,EAAD,KAA2B,wBAAMa,SAAN,UAAyBD,QAAQ,YAC5DH,SAAa,wBAAMI,SAAN,WAA0BD,QAASH,EAAIX,QACpDW,eACC,wBAAMI,SAAN,iBAAgCD,QAASH,EAAIV,cAE9CS,GACC,wBAAMG,KAAN,kBAA6BC,QAASJ,IAEvCC,SAAa,wBAAME,KAAN,gBAA2BC,QAASH,EAAIX,QACrDW,eACC,wBAAME,KAAN,sBAAiCC,QAASH,EAAIV,gBAKtD,MAMAF,eAAmB,CACjBC,MADiB,KAEjBC,YAFiB,KAGjBC,SAAS,GAEX,IAAMc,EAAN,c,iEC9CA,UARqB,kBACnB,gCACE,qBAAKhB,MAAM,mBACX,0BAFF,kBAGE,yBAJiB","file":"component---src-pages-404-js-ae919bc41d5ed36dfd34.js","sourcesContent":["/**\n * Seo component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useLocation } from \"@reach/router\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nconst Seo = ({ title, description, article }) => {\n  const { pathname } = useLocation()\n  const { site } = useStaticQuery(query)\n  const {\n    defaultTitle,\n    titleTemplate,\n    defaultDescription,\n    siteUrl,\n    twitterUsername,\n  } = site.siteMetadata\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname}`,\n  }\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n      {twitterUsername && (\n        <meta name=\"twitter:creator\" content={twitterUsername} />\n      )}\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n    </Helmet>\n  )\n}\nexport default Seo\nSeo.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  article: PropTypes.bool,\n}\nSeo.defaultProps = {\n  title: null,\n  description: null,\n  article: false,\n}\nconst query = graphql`\n  query Seo {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        titleTemplate\n        defaultDescription: description\n        siteUrl\n        twitterUsername\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <>\n    <Seo title=\"404: Not found\" />\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}